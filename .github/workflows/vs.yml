name: rmac-build-vs
on:
  workflow_dispatch:
  push:

jobs:
  build_vs:
    runs-on: windows-2019
    strategy:
      fail-fast: false
    steps:

      - name: Download and install Windows SDK
        run: |
          import subprocess
          import urllib.request
          urllib.request.urlretrieve("https://go.microsoft.com/fwlink/p/?LinkId=323507", "sdksetup.exe")
          subprocess.run(["sdksetup.exe", "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"], check=True, capture_output=True)
        shell: python

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: "Clone all the things"
        shell: cmd
        run: |
          git clone http://shamusworld.gotdns.org/git/rmac
          git clone http://shamusworld.gotdns.org/git/rln
          @rem curl https://github.com/tronkko/dirent/blob/master/include/dirent.h --output dirent.h
          echo x86
          msbuild "rmac\Vs2015\VS2015.sln" /p:configuration=Release /p:platform=x86
          7z a rmac_x86.zip rmac.exe
          echo x64
          msbuild "rmac\Vs2015\VS2015.sln" /p:configuration=Release /p:platform=x64
          7z a rmac_x86.zip rmac.exe
          @rem mkdir output
          @rem cd rmac
          @rem sed -i "s/gcc$/${{ matrix.gcc_name }}/g" makefile
          @rem make -j2
          @rem strip rmac.exe
          @rem mv rmac.exe ../output
          @rem cd ../rln
          @rem sed -i "s/gcc$/${{ matrix.gcc_name }}/g" makefile
          @rem make -j2
          @rem strip rln.exe
          @rem mv rln.exe ../output



#      - name: "Upload artifacts"
#        uses: actions/upload-artifact@v3
#        with:
#          name: rmac_rln-vs-${{ github.sha }}
#          path: *.zip

